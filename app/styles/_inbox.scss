.app-wrapper {
  // padding-top: 4rem; // same as header height, since header is fixed
}

.app-top-area {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: map-get($zindex, header);
}

.app-header {
  background: rgba(255,255,255,.5);
  box-shadow:
    0 .1rem .35rem -.2rem rgba($color-dark, .65),
    0 .6rem 1.65rem -1rem rgba($color-dark, .2);
  margin: 0 -4rem;
  padding: 1rem 5rem;
  height: 4rem;
  @include clearfix;
  z-index: map-get($zindex, header);


  // make it draggable since we're removing chrome
  -webkit-user-select: none;
  -webkit-app-region: drag;
  a,
  input[type="submit"],
  input[type="reset"],
  input[type="button"],
  input[type="text"],
  button,
  textarea {
  	-webkit-app-region: no-drag;
  }
}
.app-title {
  margin: 0 0 0 65px;
  font-size: 1.4rem;
  opacity: .2;
}


.patchboard-wrapper {
  position: relative;
  height:2000px;
  width: 2000px;
  font-size: 1rem;
  overflow: hidden;

  &.modal-open {
    // TODO: how to prevent scrolling?
  }
}
.header-controls {
  position: fixed;
  top: 4rem;
  right: 0;
  padding: 2rem 2rem 0 0;
  font-size: 1.6rem;
  z-index: map-get($zindex, header);

  button {
    margin-left: 1rem;
  }
}

$gridLineOpacity: .2;
$gidLineColor: rgba(255, 255, 255, $gridLineOpacity);
$majorGridLineOpacity: .6;
$majorGidLineColor: rgba(255, 255, 255, $majorGridLineOpacity);
.patchboard{
  // font-size: 1rem;
  height:2000px;
  width: 2000px;
  background-size: 10em;
  background-color: transparent;
  background-image:
    // horizontal
    linear-gradient(
      180deg,
      $gidLineColor 0%,
      $gidLineColor .5%,
      transparent 1%,
      transparent 19%,
      $gidLineColor 20%,
      $gidLineColor 20.5%,
      transparent 21%,
      transparent 39%,
      $majorGidLineColor 40%,
      $majorGidLineColor 40.5%,
      transparent 41%,
      transparent 59%,
      $gidLineColor 60%,
      $gidLineColor 60.5%,
      transparent 61%,
      transparent 79%,
      $gidLineColor 80%,
      $gidLineColor 80.5%,
      transparent 81%,
      transparent
      ),
    // vertical
    linear-gradient(
      90deg,
      $majorGidLineColor 0%,
      $majorGidLineColor .5%,
      transparent 1%,
      transparent 19%,
      $gidLineColor 20%,
      $gidLineColor 20.5%,
      transparent 21%,
      transparent 39%,
      $gidLineColor 40%,
      $gidLineColor 40.5%,
      transparent 41%,
      transparent 59%,
      $gidLineColor 60%,
      $gidLineColor 60.5%,
      transparent 61%,
      transparent 79%,
      $gidLineColor 80%,
      $gidLineColor 80.5%,
      transparent 81%,
      transparent
      );
}


.svg-arrow {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events:none;
}

.patch-node {
  -webkit-user-select: none;
  overflow-wrap: break-word;
  cursor: pointer;
  display: block;
  width: 18rem;
  margin: 0;
  position: absolute;
  font-size: 1.3em;
  perspective: 1000px;

  .patch-node-wrapper {
    flex-direction: column;
    background: #fff;
    box-shadow: 0 .3rem .2rem 0 rgba($color-background, .8),
                0 .3rem .8rem -.4rem rgba($color-link, 1),
                0 .8rem 1rem -.6rem rgba($color-dark, .2);
    transition: .3s;
  }

  .patch-header {
    padding: .5rem 1rem;
    border-bottom: .1rem solid $color-light;
  }

  .patch-title {
    margin: 0;
    padding: 0;
  }

  .patch-body {
    padding: 1rem;
    font-family: 'Source Code Pro', monospace;
    letter-spacing: -.05rem;
  }

  .patch-footer {
    font-size: 1em;
    padding: .5rem 1rem;
    border-top: .1rem solid $color-light;
  }

  .menu-button {
    display: inline-block;
    float: right;
  }

  .delete-button {
    display: inline-block;
    float: right;
  }

  &:hover {
    .patch-node-wrapper {
      transition: .1s;
      box-shadow: 0 .3rem .2rem -.2rem rgba($color-background, .2),
                  0 .3rem 1.8rem -1rem rgba($color-link, 1),
                  0 .8rem 1.8rem -.4rem rgba($color-dark, .4);
    }
  }

  &.didMouseDown1 {
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
    cursor: grabbing;
    outline: none;

    .patch-node-wrapper {
      transition: .035s;
      transform: scale(0.98);
      // transform: rotateX(10deg) translateY(-.4em);
      box-shadow: 0 .1rem .1rem 0 rgba($color-background, .2),
                  0 .1rem .4rem -.1rem rgba($color-link, 1),
                  0 .3rem 1.2rem -.2rem rgba($color-dark, .6);
    }
  }

  &.dragging {
     // this cursor style also gets set to the body in side of a react component function,
     // so even if cursor misses for a frame it will maintain
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
    cursor: grabbing;
    outline: none;

    .patch-node-wrapper {
      transition: .3s;
      // transform: rotateX(10deg) translateY(-.4em) scale(1.03);
      box-shadow: 0 .8rem .3rem -.3rem rgba($color-background, .2),
                  0 1.4rem 2.4rem -1.2rem rgba($color-link, 1),
                  0 1.8rem 2.9rem -.8rem rgba($color-dark, .6);
    }
  }
}

.patch-node-animation-enter {
  opacity: 0.01;
  .patch-node-wrapper {
    transform: scale(0.01);
  }
}

.patch-node-animation-enter.patch-node-animation-enter-active {
  opacity: 1;
  transition: opacity 100ms ease-out;
  .patch-node-wrapper {
    transform: scale(1.0);
    transition: all 100ms ease-out;
  }
}

.patch-node-animation-leave {
  pointer-events:none;
  opacity: 1;
}

.patch-node-animation-leave.patch-node-animation-leave-active {
  pointer-events:none;
  opacity: 0.01;
  outline: .1rem solid $color-medium;
  transition: opacity 1500ms ease-out;
  background: rgba($color-light, .35);
  .patch-node-wrapper {
    opacity: 0.01;
    transition: opacity 200ms ease-in;
  }

}

.patch-id {
  color: $color-medium;
}


/*

overlays

*/

.overlay-wrapper {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100vh;
  width: 100vw;
  padding: 6rem; // minimum edge between browser window edge
  z-index: map-get($zindex, overlay);
  overflow-y: scroll;
  perspective: 10000px;
  background: rgba($color-medium, .8);

  &.closing {
    opacity: 0.01;
    transition: 200ms opacity ease-out;
  }

}
.overlay-click-to-close {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100vh;
  width: 100vw;
}
.modal-wrapper {
  z-index: map-get($zindex, modal);
  // hack(?) for centering an absolutely-positioned element:
  // from https://css-tricks.com/forums/topic/horizontal-centering-of-an-absolute-element/
  max-width: 120rem;
  margin: 0 auto;
}
.modal {
  background: #fff;
  padding: 4rem; // margin inside of modal
  position: relative;
}
.close-modal-button {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  padding: 3rem 4rem;
  font-weight: 100;
  font-size: 4rem;
  line-height: 4rem;
  color: $color-medium;
}

.modal-animation-appear {
  pointer-events: none;
  opacity: 0.01;
  .modal {
    transform: scale(0.1);
  }
}
.modal-animation-appear.modal-animation-appear-active {
  pointer-events: none;
  opacity: 1;
  transition: opacity 200ms ease-out;
  .modal {
    transform:scale(1);
    transition: all 200ms ease-in;
  }
}

.modal-animation-enter {
  pointer-events: none;
  opacity: 0.01;
  .modal {
    transform: translateX(25vw);
  }
}

.modal-animation-enter.modal-animation-enter-active {
  pointer-events: none;
  opacity: 1;
  transition: opacity 300ms ease-in;
  z-index: 99999999;
  .modal {
    transform: translateX(0vw);
    transition: all 300ms ease-out;
    z-index: 99999999;
  }
}

.modal-animation-leave {
  pointer-events: none;
  opacity: 1;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  margin: 0 auto;
}

.modal-animation-leave.modal-animation-leave-active {
  pointer-events: none;
  opacity: 0.01;
  transition: all 200ms ease-out;
  .modal {
    // transform: rotateX(0) translateY(0vh) scale(1);
    // transform:scale(1);
    // transform: translateX(-100vw);
    transform:scale(.01);
    transition: all 200ms ease-out;
  }
}


// edit patches
.modal.patch-editor {

  .story-preview-wrapper {
    padding: 8rem;
  }

  .patch-editor-controls {
    text-align: right;
  }

  .patch-input-and-preview-container{
    display: flex;
    padding-top: 2rem 0 0 0;
  }
  .patch-entry {
    flex: 1;
  }
  .patch-input {
    display: block;
    font-family: monospace;
    width: 100%;
  }
  .formatted-preview-section {
    flex: 1;
    padding-left: 4rem;
    font-size: .8em;
  }

  .formatted-article {
    overflow-wrap: break-word;
    word-wrap: break-word;
    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;
    padding: 4rem;
    border: .1rem solid $color-light;
  }
}



@media (min-width: 700px) {
}
